;; https://github.com/practicalli/clojure-deps-edn
{:paths ["src" "resources"]
 :deps  {ch.qos.logback/logback-classic    {:mvn/version "1.4.11"}
         com.github.seancorfield/honeysql  {:mvn/version "2.4.1045"}
         com.github.seancorfield/next.jdbc {:mvn/version "1.3.883"}
         datascript/datascript             {:mvn/version "1.5.2"}
         environ/environ                   {:mvn/version "1.2.0"}
         hato/hato                         {:mvn/version "0.9.0"}
         hiccup/hiccup                     {:mvn/version "1.0.5"}
         info.sunng/ring-jetty9-adapter    {:mvn/version "0.22.1"}
         integrant/integrant               {:mvn/version "0.8.1"}
         metosin/jsonista                  {:mvn/version "0.3.7"}
         metosin/reitit                    {:mvn/version "0.6.0"}
         metosin/ring-http-response        {:mvn/version "0.9.3"}
         nano-id/nano-id                   {:mvn/version "1.0.0"}
         org.clojure/clojure               {:mvn/version "1.11.1"}
         org.clojure/core.async            {:mvn/version "1.6.681"}
         org.clojure/tools.logging         {:mvn/version "1.2.4"}
         org.xerial/sqlite-jdbc            {:mvn/version "3.42.0.0"}
         ring/ring                         {:mvn/version "1.10.0"}
         ring/ring-defaults                {:mvn/version "0.3.4"}
         ring/ring-json                    {:mvn/version "0.5.1"}}
 :aliases
 {:test     {:extra-paths ["test"]
             :extra-deps  {org.clojure/test.check {:mvn/version "1.1.0"}}}
  :runner
  {:extra-deps {io.github.cognitect-labs/test-runner
                {:git/url "https://github.com/cognitect-labs/test-runner"
                 :sha     "2d69f33d7980c3353b246c28f72ffeafbd9f2fab"}}
   :exec-fn    cognitect.test-runner.api/test}
  :jar      {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
             :exec-fn      hf.depstar/jar
             :exec-args    {:jar "keg-party.jar" :sync-pom true}}
  :uberjar  {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
             :exec-fn      hf.depstar/uberjar
             :exec-args    {:aot        true
                            :jar        "keg-party.jar"
                            :main-class "keg-party.main"
                            :sync-pom   true}}
  :install  {:replace-deps {slipset/deps-deploy {:mvn/version "0.1.5"}}
             :exec-fn      deps-deploy.deps-deploy/deploy
             :exec-args    {:installer :local :artifact "keg-party.jar"}}
  :deploy   {:replace-deps {slipset/deps-deploy {:mvn/version "0.1.5"}}
             :exec-fn      deps-deploy.deps-deploy/deploy
             :exec-args    {:installer :remote :artifact "keg-party.jar"}}
  :tap-in   {;:exec-fn   keg-party.clients.rest-client/foo
             :main-opts ["-m" "keg-party.clients.rest-client"]}
  ;; Not ready yet
  ;:tap-in  {:exec-fn   keg-party.clients.rest-client/tap-launcher
  ;          :exec-args {:host "http://localhost"
  ;                      :port 3000}}
  }}
